{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 SOURCES
\f1\b0 \
# bsc-coding-five/image_preprocessing/Image\\Processing.ipynb \
# https://medium.com/@oluyaled/image-classification-with-tensorflow-and-keras-dd5eae8906ca\
#https://blog.keras.io/building-powerful-image-classification-models-using-very-little-data.html\
# https://www.tensorflow.org/tutorials/load_data/images\
#https://numpy.org/doc/stable/reference/generated/numpy.argmax.html\
#https://numpy.org/doc/stable/reference/generated/numpy.max.html\
#https://www.tensorflow.org/guide/keras/sequential_model\
#https://keras.io/api/data_loading/image/\
#https://machinelearningmastery.com/how-to-load-convert-and-save-images-with-the-keras-api/\
#https://forums.fast.ai/t/why-using-np-argmax-for-getting-predictions/14937\
\
- \
For the exam i created a CNN model. I used this because its mostly used for image classification. I did a lot experimenting my changing the layer values as well as adding layers like batch normalisation to make the model more accurate. I also implemented mat plot lib so i can see the images on my Jupyter notebook. This was helpful to know if the images were going into the right classes. Overall, I think it went well since the images I added in work and are classed correctly.  I had a few issues with epoch since the model was training very slow, so that\'92s when I decided to up the epoch from 10 to 15, it helped to also get a higher val accuracy. Another issue is that my images kept duplicating but it got solved after I realised you only have to run that cell once.}